CAPI=2:
name: "bci:ip:counter:1.0"

description: "counter"

# Grouping of files based on their purposes and processing
# steps.
filesets:
   files_rtl:
      files:
         - rtl/counter.sv
      file_type: systemVerilogSource

   files_rtl_synth:
      files:
         - rtl/counter.sv
         - rtl/include/counter_lib.sv: {is_include_file: true}
      file_type: systemVerilogSource

   files_rtl_emu:
      files:
         - rtl/counter_emu.sv
         - rtl/include/counter_lib.sv: {is_include_file: true}
      file_type: systemVerilogSource

   files_pre_build_data:
      files:
         - data/pre_build.data
      file_type: user

   files_vpi:
      files:
         - data/vpi.c
         - data/include/vpi.h: {file_type: cSource, is_iclude_file: true}
      file_type: cSource

parameters:
   PALLADIUM:
      datatype: bool
      paramtype: plusarg
   ENUMLATION:
      datatype: bool
      paramtype: vlogparam 
   SYNTHESIS:
      datatype: bool
      paramtype: vlogdefine
   BUSWIDTH:
      datatype: int
      paramtype: generic

scripts:
   pre_build_scr:
      cmd:
         - data/pre_build_script1.sh
         - data/pre_build_script2.sh
      filesets:
         - files_pre_build_data
      #env: !!python/object:dict
      #   a: b

vpi:
   my_vpi:
      libs:
         - data/vpi_lib.so
      filesets:
         - files_vpi

targets:
   default:
      toplevel: counter
      default_tool: xcelium
      filesets:
         - target_sim ? (files_rtl)
         - target_synth ? (files_rtl_synth)
         - target_emu ? (files_rtl_emu)
      parameters:
         - tool_palladium ? (PALLADIUM=true)
         - is_emu ? (ENUMLATION=false)
         - target_synth ? (SYNTHESIS=true)
         - BUSWIDTH=16
      tools:
         xcelium:
            xmvlog_options:
               - sss
               - "ttt uuu"
         palladium:
            hw_model: SuperFast
            vlan_opts:
               - "-aaa"
               - "+bbb -ccc"
            xrun_opts:
               - "--zzz"
      hooks:
         # pre_build
         # post_build
         # pre_run
         # post_run
         pre_build:
            - pre_build_scr
      #vpi:
      #   - my_vpi
